% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-SOSet.R
\docType{class}
\name{SOSet-class}
\alias{SOSet-class}
\alias{SOSet}
\title{SOSet object and contructor}
\usage{
SOSet(
  NMFobjL,
  NMFrankL = NULL,
  dataCol = NULL,
  corMet = "spearman",
  corUse = "pairwise.complete.obs"
)
}
\arguments{
\item{NMFobjL}{A \code{list} containing \code{NMF}s type object for holding
NMF results from NMF runs, where users run NMF on each dataset.}

\item{NMFrankL}{A \code{list} containing the ranks for each dataset that are
considered to be included in SOSet, where we recommend to avoid to include
low rank(s), i.e., rank = {2, 3, 4, ..., 20}}

\item{dataCol}{A \code{vector} of the colors that represent each dataset/NMF run.}

\item{corMet}{a character string indicating which correlation coefficient
(or covariance) is to be computed. One of "pearson", "kendall",
or "spearman" (default).}

\item{corUse}{an optional character string giving a method for computing covariances
in the presence of missing values. This must be (an abbreviation of) one of
the strings "pairwise.complete.obs (default)", "everything", "all.obs",
"complete.obs", or "na.or.complete".}

\item{basisMat}{A \code{matrix} that column-wide concatenate W (basis) matrices
across data, where rows are genes and columns are metagenes
(Gene Expression Programs).}
}
\value{
SOSet object
}
\description{
An S4 class to contain NMF results across ranks in multiple cohorts
and correlation matrix
}
\details{
SOSet object contains NMF, or cNMF, results generated by
the R NMF package, or the Python cNMF package, that deconvolutes
expresion profiles of the tumors and/or multiple segments, i.e., regions of interest,
from (spatial) transcriptomics, e.g., Nanostring Digital Spatial Profiler (DSP), in order to
calculate correlation coefficients of the metagenes. The object also contains the
correlation matrix.
}
\examples{
dataL <- list(DSP_WTA_DN = dsp_wta_dn_nmf_object, DSP_CTA_DN = ds_cta_dn_nmf_object)
rankL <- list(DSP_WTA_DN = c(3:10,15,18), DSP_CTA_DN = c(3:10,15,20,23))
col <- c("DSP_WTA_DN" = "cadetblue1", "DSP_CTA_DN" = "darkgoldenrod1")
corMet <- "pearson"
corUse <- "pairwise.complete.obs"

mxInput <- SOSet(NMFobjL = dataL, NMFrankL = rankL, dataCol = col, corMet = corMet, corUse = corUse)

}
